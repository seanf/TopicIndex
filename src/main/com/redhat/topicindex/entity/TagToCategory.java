package com.redhat.topicindex.entity;

// Generated May 31, 2011 9:27:13 AM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.envers.Audited;
import org.hibernate.validator.NotNull;

/**
 * TagToCategory generated by hbm2java
 */
@Entity
@Audited
@Table(name = "TagToCategory", catalog = "Skynet", uniqueConstraints = @UniqueConstraint(columnNames = {"TagID", "CategoryID" }))
public class TagToCategory implements java.io.Serializable, Comparable<TagToCategory>  
{
	public static final String SELECT_ALL_QUERY = "select tagToCategory from TagToCategory tagToCategory";
	private static final long serialVersionUID = 1037132589833037549L;
	private Integer tagToCategoryId;
	private Tag tag;
	private Category category;
	private Integer sorting;

	public TagToCategory() 
	{
	}

	public TagToCategory(final Tag tag, final Category category) 
	{
		this.tag = tag;
		this.category = category;
	}

	public TagToCategory(final Tag tag, final Category category, final Integer sorting) 
	{
		this.tag = tag;
		this.category = category;
		this.sorting = sorting;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "TagToCategoryID", unique = true, nullable = false)
	public Integer getTagToCategoryId() {
		return this.tagToCategoryId;
	}

	public void setTagToCategoryId(Integer tagToCategoryId) 
	{
		this.tagToCategoryId = tagToCategoryId;
	}

	@ManyToOne
	@JoinColumn(name = "TagID", nullable = false)
	@NotNull
	public Tag getTag() 
	{
		return this.tag;
	}

	public void setTag(final Tag tag) 
	{
		this.tag = tag;
	}

	@ManyToOne
	@JoinColumn(name = "CategoryID", nullable = false)
	@NotNull
	public Category getCategory() 
	{
		return this.category;
	}

	public void setCategory(final Category category) 
	{
		this.category = category;
	}

	@Column(name = "Sorting")
	public Integer getSorting() 
	{
		return this.sorting;
	}

	public void setSorting(Integer sorting) 
	{
		this.sorting = sorting;
	}
	
	/**
	 * Sorting order is preferentially used to sort TagToCategory's, or the name of the Tag that
	 * the TagToCategory's point to are used if both TagToCategory's sorting orders are null.
	 */
	public int compareTo(final TagToCategory o) 
	{
		if (o == null)
			return 1;
		
		if (this.getSorting() == null && o.getSorting() == null)
			return compareSecondLevel(this, o);
					
		if (this.getSorting() == null)
			return 1;
		if (o.getSorting() == null)
			return -1;
		
		if (this.getSorting().equals(o.getSorting()))
			return compareSecondLevel(this, o);
		
		return this.getSorting().compareTo(o.getSorting());
	}
	
	protected int compareSecondLevel(final TagToCategory o1, final TagToCategory o2)
	{
		if (o2 == null)
			return 1;
		
		if (o1.getTag() == null && o2.getTag() == null)
			return 0;					
		if (o1.getTag() == null)
			return 1;
		if (o2.getTag() == null)
			return -1;
		
		if (o1.getTag().getTagName() == null && o2.getTag().getTagName() == null)
			return 0;			
		if (o1.getTag().getTagName() == null)
			return -1;
		if (o2.getTag().getTagName() == null)
			return 1;
		
		return o1.getTag().getTagName().compareTo(o2.getTag().getTagName());
	}
}
